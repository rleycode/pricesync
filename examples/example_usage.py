#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã PriceSync
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from main import PriceSyncManager

def example_test_connections():
    """–ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π"""
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π ===")
    
    manager = PriceSyncManager()
    results = manager.test_connections()
    
    for source, status in results.items():
        status_icon = "‚úÖ" if status else "‚ùå"
        print(f"{source.upper()}: {status_icon}")

def example_grandline_sync():
    """–ü—Ä–∏–º–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å GrandLine"""
    print("=== –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è GrandLine ===")
    
    manager = PriceSyncManager()
    success = manager.sync_grandline()
    
    if success:
        print("‚úÖ GrandLine —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ GrandLine")

def example_metallprofil_sync():
    """–ü—Ä–∏–º–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –ú–µ—Ç–∞–ª–ª–ø—Ä–æ—Ñ–∏–ª—å"""
    print("=== –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ú–µ—Ç–∞–ª–ª–ø—Ä–æ—Ñ–∏–ª—å ===")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_rules = {
        'thickness_range': {'min': 0.4, 'max': 1.0},
        'coating_types': ['–ø–æ–ª–∏—ç—Å—Ç–µ—Ä', '–ø—É—Ä–∞–ª', 'printech'],
        'keywords': {
            'include': ['–ø—Ä–æ—Ñ–Ω–∞—Å—Ç–∏–ª', '–º–µ—Ç–∞–ª–ª–æ—á–µ—Ä–µ–ø–∏—Ü–∞', '—Å–∞–π–¥–∏–Ω–≥'],
            'exclude': ['–±—Ä–∞–∫', '–±/—É', '–æ—Å—Ç–∞—Ç–æ–∫']
        }
    }
    
    manager = PriceSyncManager()
    success = manager.sync_metallprofil(processing_rules)
    
    if success:
        print("‚úÖ –ú–µ—Ç–∞–ª–ª–ø—Ä–æ—Ñ–∏–ª—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ú–µ—Ç–∞–ª–ª–ø—Ä–æ—Ñ–∏–ª—å")

def example_full_sync():
    """–ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
    print("=== –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ===")
    
    manager = PriceSyncManager()
    results = manager.sync_all_sources()
    
    print(f"GrandLine: {'‚úÖ' if results['grandline'] else '‚ùå'}")
    print(f"–ú–µ—Ç–∞–ª–ª–ø—Ä–æ—Ñ–∏–ª—å: {'‚úÖ' if results['metallprofil'] else '‚ùå'}")
    print(f"–í—Ä–µ–º—è: {results['timestamp']}")

def example_scheduler_usage():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    print("=== –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ ===")
    
    manager = PriceSyncManager()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    status = manager.scheduler.get_status()
    print(f"–°—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {status}")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    # –ö–∞–∂–¥—ã–µ 2 —á–∞—Å–∞
    manager.scheduler.schedule_custom('hours', 2)
    
    # –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 10:30
    manager.scheduler.schedule_custom('days', 1, '10:30')
    
    print("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

if __name__ == "__main__":
    print("üöÄ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è PriceSync\n")
    
    try:
        # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
        
        # example_test_connections()
        # example_grandline_sync()
        # example_metallprofil_sync()
        # example_full_sync()
        # example_scheduler_usage()
        
        print("\n‚ú® –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω .env —Ñ–∞–π–ª –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
